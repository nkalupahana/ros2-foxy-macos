name: ROS2 Foxy Workspaces

on:
  workflow_dispatch:
  
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        workspace: ["ros2-foxy-tools", "ros2-foxy-moveit2", "ros2-foxy-nav2"]
    runs-on: macos-latest
    steps:      
      - name: Setup Workspace
        run: |
          xcode-select -p
          brew install cppcheck eigen pcre poco tinyxml wget bullet bison
          export PATH="/usr/local/opt/bison/bin:$PATH"
          brew install python@3.8
          brew unlink python
          brew link --force python@3.8
          brew install asio tinyxml2 opencv console_bridge openssl
          export OPENSSL_ROOT_DIR=$(brew --prefix openssl)
          brew install log4cxx spdlog cunit qt@5 freetype assimp
          export CMAKE_PREFIX_PATH=$CMAKE_PREFIX_PATH:/usr/local/opt/qt@5
          export PATH=$PATH:/usr/local/opt/qt@5/bin
          brew install graphviz pyqt5 sip
          sudo python3 -m pip install -U \
             argcomplete catkin_pkg colcon-common-extensions coverage \
             cryptography empy flake8 flake8-blind-except flake8-builtins \
             flake8-class-newline flake8-comprehensions flake8-deprecated \
             flake8-docstrings flake8-import-order flake8-quotes ifcfg \
             importlib-metadata lark-parser lxml mock mypy netifaces \
             nose pep8 pydocstyle pydot pygraphviz pyparsing \
             pytest-mock rosdep setuptools vcstool rosdistro numpy
      - name: Get ROS2 Foxy
        run: |
          sudo mkdir -p /opt/ros/foxy/$WORKSPACE
          sudo chown runner /opt/ros /opt/ros/foxy/ /opt/ros/foxy/$WORKSPACE
          cd /opt/ros/foxy
          wget https://github.com/nkalupahana/ros2-foxy-macos/releases/download/ros2-foxy-base/ros2-foxy-base.zip
          unzip ros2-foxy-base.zip
          source ros2-foxy-base/setup.bash
          ros2
          brew install osrf/simulation/gazebo11
      - name: Create & Build Workspace
        run: |
          wget https://raw.githubusercontent.com/nkalupahana/ros2-foxy-macos/main/setup/$WORKSPACE.bash
          chmod a+x $WORKSPACE.bash
          . ./$WORKSPACE.bash
          export PATH="/usr/local/opt/bison/bin:/usr/local/opt/qt@5/bin:$PATH"
          export OPENSSL_ROOT_DIR=$(brew --prefix openssl)
          export CMAKE_PREFIX_PATH=/usr/local/opt/qt@5:$CMAKE_PREFIX_PATH
          export
          source /opt/ros/foxy/ros2-foxy-base/setup.bash
          mkdir -p ~/ws/src
          cd ~/ws/src
          wget https://raw.githubusercontent.com/nkalupahana/ros2-foxy-macos/main/repos/$WORKSPACE.repos
          vcs import < $WORKSPACE.repos
          cd ~/ws
          sudo mkdir -p /opt/ros/foxy/$WORKSPACE
          sudo chown runner /opt/ros /opt/ros/foxy/ /opt/ros/foxy/$WORKSPACE
          colcon build --cmake-args -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTING:BOOL=False --install-base /opt/ros/foxy/$WORKSPACE --packages-skip $PACKAGES_SKIP
        env:
          WORKSPACE: ${{ matrix.workspace }}
      - name: Package
        run: |
          cd /opt/ros/foxy
          zip -r $WORKSPACE.zip $WORKSPACE/
        env:
          WORKSPACE: ${{ matrix.workspace }}  
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Release
        env:
          GITHUB_USER: ${{ secrets.GITHUB_USER }}
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
          WORKSPACE: ${{ matrix.workspace }}
        run: |
          hub release show $WORKSPACE >> description.txt
          sed -i -e '$d' description.txt
          echo "Last updated: "$(date) >> description.txt 
          hub release delete $WORKSPACE
          hub release create -F description.txt -a /opt/ros/foxy/$WORKSPACE.zip $WORKSPACE
